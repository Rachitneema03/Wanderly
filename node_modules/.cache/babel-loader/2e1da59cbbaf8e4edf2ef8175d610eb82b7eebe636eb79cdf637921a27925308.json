{"ast":null,"code":"import React from'react';// Location Service for Wanderly\nexport class LocationService{constructor(){this.currentLocation=null;this.watchId=null;}// Get current user location\nasync getCurrentLocation(){return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('Geolocation is not supported by this browser.'));return;}const options={enableHighAccuracy:true,timeout:10000,maximumAge:300000// 5 minutes\n};navigator.geolocation.getCurrentPosition(position=>{const location={latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy,timestamp:position.timestamp};this.currentLocation=location;resolve(location);},error=>{let errorMessage='Unable to retrieve your location.';switch(error.code){case error.PERMISSION_DENIED:errorMessage='Location access denied by user.';break;case error.POSITION_UNAVAILABLE:errorMessage='Location information is unavailable.';break;case error.TIMEOUT:errorMessage='Location request timed out.';break;default:errorMessage='An unknown error occurred while retrieving location.';break;}reject(new Error(errorMessage));},options);});}// Watch location changes\nwatchLocation(callback){if(!navigator.geolocation){throw new Error('Geolocation is not supported by this browser.');}const options={enableHighAccuracy:true,timeout:10000,maximumAge:300000};this.watchId=navigator.geolocation.watchPosition(position=>{const location={latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy,timestamp:position.timestamp};this.currentLocation=location;callback(location);},error=>{console.error('Location watch error:',error);callback(null,error);},options);return this.watchId;}// Stop watching location\nstopWatchingLocation(){if(this.watchId){navigator.geolocation.clearWatch(this.watchId);this.watchId=null;}}// Get location name from coordinates (reverse geocoding)\nasync getLocationName(latitude,longitude){try{const response=await fetch(\"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=\".concat(latitude,\"&longitude=\").concat(longitude,\"&localityLanguage=en\"));if(!response.ok){throw new Error('Failed to fetch location name');}const data=await response.json();return{city:data.city||data.locality,country:data.countryName,region:data.principalSubdivision,fullName:\"\".concat(data.city||data.locality,\", \").concat(data.countryName)};}catch(error){console.error('Error getting location name:',error);return{city:'Unknown',country:'Unknown',region:'Unknown',fullName:'Unknown Location'};}}// Calculate distance between two coordinates (in kilometers)\ncalculateDistance(lat1,lon1,lat2,lon2){const R=6371;// Earth's radius in kilometers\nconst dLat=this.deg2rad(lat2-lat1);const dLon=this.deg2rad(lon2-lon1);const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(this.deg2rad(lat1))*Math.cos(this.deg2rad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));const distance=R*c;return distance;}// Convert degrees to radians\ndeg2rad(deg){return deg*(Math.PI/180);}// Check if location services are available\nisLocationAvailable(){return'geolocation'in navigator;}// Request location permission\nasync requestLocationPermission(){if(!this.isLocationAvailable()){throw new Error('Geolocation is not supported by this browser.');}try{const permission=await navigator.permissions.query({name:'geolocation'});return permission.state==='granted';}catch(error){// Fallback: try to get location and see if it works\ntry{await this.getCurrentLocation();return true;}catch(error){return false;}}}// Get cached location if available\ngetCachedLocation(){return this.currentLocation;}// Clear cached location\nclearCachedLocation(){this.currentLocation=null;}}// Create a singleton instance\nexport const locationService=new LocationService();// Hook for React components\nexport const useLocation=()=>{const[location,setLocation]=React.useState(null);const[loading,setLoading]=React.useState(false);const[error,setError]=React.useState(null);const getLocation=async()=>{setLoading(true);setError(null);try{const loc=await locationService.getCurrentLocation();setLocation(loc);}catch(err){setError(err.message);}finally{setLoading(false);}};const watchLocation=callback=>{return locationService.watchLocation((loc,err)=>{if(loc){setLocation(loc);if(callback)callback(loc);}else if(err){setError(err.message);}});};const stopWatching=()=>{locationService.stopWatchingLocation();};React.useEffect(()=>{return()=>{stopWatching();};},[]);return{location,loading,error,getLocation,watchLocation,stopWatching,isAvailable:locationService.isLocationAvailable()};};","map":{"version":3,"names":["React","LocationService","constructor","currentLocation","watchId","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","Error","options","enableHighAccuracy","timeout","maximumAge","getCurrentPosition","position","location","latitude","coords","longitude","accuracy","timestamp","error","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","watchLocation","callback","watchPosition","console","stopWatchingLocation","clearWatch","getLocationName","response","fetch","concat","ok","data","json","city","locality","country","countryName","region","principalSubdivision","fullName","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","distance","deg","PI","isLocationAvailable","requestLocationPermission","permission","permissions","query","name","state","getCachedLocation","clearCachedLocation","locationService","useLocation","setLocation","useState","loading","setLoading","setError","getLocation","loc","err","message","stopWatching","useEffect","isAvailable"],"sources":["D:/PROJECTS/Openai Hackathon/Wanderly/src/components/LocationService.js"],"sourcesContent":["import React from 'react';\n\n// Location Service for Wanderly\nexport class LocationService {\n  constructor() {\n    this.currentLocation = null;\n    this.watchId = null;\n  }\n\n  // Get current user location\n  async getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocation is not supported by this browser.'));\n        return;\n      }\n\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5 minutes\n      };\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy,\n            timestamp: position.timestamp\n          };\n          \n          this.currentLocation = location;\n          resolve(location);\n        },\n        (error) => {\n          let errorMessage = 'Unable to retrieve your location.';\n          \n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              errorMessage = 'Location access denied by user.';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              errorMessage = 'Location information is unavailable.';\n              break;\n            case error.TIMEOUT:\n              errorMessage = 'Location request timed out.';\n              break;\n            default:\n              errorMessage = 'An unknown error occurred while retrieving location.';\n              break;\n          }\n          \n          reject(new Error(errorMessage));\n        },\n        options\n      );\n    });\n  }\n\n  // Watch location changes\n  watchLocation(callback) {\n    if (!navigator.geolocation) {\n      throw new Error('Geolocation is not supported by this browser.');\n    }\n\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000\n    };\n\n    this.watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        const location = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n          timestamp: position.timestamp\n        };\n        \n        this.currentLocation = location;\n        callback(location);\n      },\n      (error) => {\n        console.error('Location watch error:', error);\n        callback(null, error);\n      },\n      options\n    );\n\n    return this.watchId;\n  }\n\n  // Stop watching location\n  stopWatchingLocation() {\n    if (this.watchId) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = null;\n    }\n  }\n\n  // Get location name from coordinates (reverse geocoding)\n  async getLocationName(latitude, longitude) {\n    try {\n      const response = await fetch(\n        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\n      );\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch location name');\n      }\n      \n      const data = await response.json();\n      return {\n        city: data.city || data.locality,\n        country: data.countryName,\n        region: data.principalSubdivision,\n        fullName: `${data.city || data.locality}, ${data.countryName}`\n      };\n    } catch (error) {\n      console.error('Error getting location name:', error);\n      return {\n        city: 'Unknown',\n        country: 'Unknown',\n        region: 'Unknown',\n        fullName: 'Unknown Location'\n      };\n    }\n  }\n\n  // Calculate distance between two coordinates (in kilometers)\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = this.deg2rad(lat2 - lat1);\n    const dLon = this.deg2rad(lon2 - lon1);\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c;\n    return distance;\n  }\n\n  // Convert degrees to radians\n  deg2rad(deg) {\n    return deg * (Math.PI/180);\n  }\n\n  // Check if location services are available\n  isLocationAvailable() {\n    return 'geolocation' in navigator;\n  }\n\n  // Request location permission\n  async requestLocationPermission() {\n    if (!this.isLocationAvailable()) {\n      throw new Error('Geolocation is not supported by this browser.');\n    }\n\n    try {\n      const permission = await navigator.permissions.query({ name: 'geolocation' });\n      return permission.state === 'granted';\n    } catch (error) {\n      // Fallback: try to get location and see if it works\n      try {\n        await this.getCurrentLocation();\n        return true;\n      } catch (error) {\n        return false;\n      }\n    }\n  }\n\n  // Get cached location if available\n  getCachedLocation() {\n    return this.currentLocation;\n  }\n\n  // Clear cached location\n  clearCachedLocation() {\n    this.currentLocation = null;\n  }\n}\n\n// Create a singleton instance\nexport const locationService = new LocationService();\n\n// Hook for React components\nexport const useLocation = () => {\n  const [location, setLocation] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const getLocation = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const loc = await locationService.getCurrentLocation();\n      setLocation(loc);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const watchLocation = (callback) => {\n    return locationService.watchLocation((loc, err) => {\n      if (loc) {\n        setLocation(loc);\n        if (callback) callback(loc);\n      } else if (err) {\n        setError(err.message);\n      }\n    });\n  };\n\n  const stopWatching = () => {\n    locationService.stopWatchingLocation();\n  };\n\n  React.useEffect(() => {\n    return () => {\n      stopWatching();\n    };\n  }, []);\n\n  return {\n    location,\n    loading,\n    error,\n    getLocation,\n    watchLocation,\n    stopWatching,\n    isAvailable: locationService.isLocationAvailable()\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}